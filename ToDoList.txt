
1. Inicializador
  	1.1 Recursos: Memoria compartida  LISTO
	1.2 Crea el archivo para la bitacora.  LISTO
	1.3 Memoria compartida con shmget  LISTO

2. Pasarle procesos al productor en el ready, con threads. LISTO

3. Productor de procesos.
	3.1 Hacer un ready LISTO 
	3.2 Se indica si segmentacion o paginacion. LISTO
	3.3 Se crean procesos cada 30-60 segundos. LISTO
	3.4 Solo un proceso puede estar buscando memoria.  (FALTA)
	3.4 Si es segmentacion es con best fit, si es paginacion cualquiera.  LISTO
	3.5 Cada proceso hace sleep y toma la region critica de forma exclusiva.

4. Espía
	4.1 Estado de la memoria LISTO
	4.2 Estado de procesos: PID de los que están en memoria, PID del que busca memoria, PID bloqueados, PID muertos, PID terminados.

5. Bitacora. LISTO

6. Finalizador. (FALTA)

FALTA
Hacer programa Finalizador
Procesos bloqueados
Actualizar busqueda 
Usar semaforo en el espacio
Otro semaforo para los archivo, uno por cada archivo?
Cambiar a procesos con hilos
Cambiar la ejecuciòn
Lecciones aprendidas 
Estrategias de semaforo y sincronizacion
Casos de prueba 
Manual de usuario


NOTAS:
1. Si no hay espacio en memoria, o sea un proceso de 5 paginas por ejemplo llega 
y no hay 5 paginas en memoria dispobibles, entonces muere el proceso y se saca de ready. 

2. Segmentacion se puede hacer solo con firts fit.

3. Al hacer  la escritura de la bitacora si se pueden usar semaforos normales porque es para 
hilos de un mismo programa.

4. El productor hace los pasos 1 - 10 (espcificacion)

5. Probar IPCS para ver los espacios de memoria compartida

6. sizeof(int) devuelve el número de bytes que se utilizan para almacenar un entero. La función se puede utilizar también con tipos de datos estructurados o uniones.
tal vez se util para ver el tamaño de los procesos. https://www.it.uc3m.es/pbasanta/asng/course_notes/ch06s04.html